!function t(n,e,o){function r(a,f){if(!e[a]){if(!n[a]){var u="function"==typeof require&&require;if(!f&&u)return u(a,!0);if(i)return i(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var l=e[a]={exports:{}};n[a][0].call(l.exports,function(t){var e=n[a][1][t];return r(e?e:t)},l,l.exports,t,n,e,o)}return e[a].exports}for(var i="function"==typeof require&&require,a=0;a<o.length;a++)r(o[a]);return r}({1:[function(t,n,e){"use strict";function o(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}function r(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(t&&t instanceof PushEvent))throw new Error("notificationHandler expects argument 1 to be a PushEvent");if(!t.data)return!1;var e=void 0;try{e=t.data.json()}catch(o){return console.log("Couldn't parse notification data as JSON, ignoring"),!1}if(!e.notification)return!1;var r=Object.assign({},n,e.notification);return r.title?(t.waitUntil(self.registration.showNotification(r.title,r)),!0):(console.log("WARN: Notification data found, but no title provided"),!1)}var i=function(){function t(t,n){for(var e=0;e<n.length;e++){var o=n[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(n,e,o){return e&&t(n.prototype,e),o&&t(n,o),n}}(),a=function(){function t(){o(this,t)}return i(t,[{key:"getNotifications",value:function(t){if("undefined"!=typeof t&&"string"!=typeof t)throw new Error("The optional tagName argument must be a string if set");if(t&&0===t.length)throw new Error("The optional tagName cannot be an empty String");return self.registration.getNotifications({tag:t})}}]),t}();self.goog=self.goog||{},self.goog.propel=self.goog.propel||{},self.goog.propel.worker={helpers:new a,notificationHandler:r}},{}]},{},[1]);
//# sourceMappingURL=propel-worker.js.map
